const express = require('express');
const router = express.Router();
const fs = require('fs');

let users = JSON.parse(fs.readFileSync('./data/users.json'));
let books = JSON.parse(fs.readFileSync('./data/books.json'));

// Task 6: Register user
router.post('/register', (req, res) => {
  const { username, password } = req.body;
  if (users.find(u => u.username === username)) {
    return res.status(400).send('User already exists');
  }
  users.push({ username, password });
  fs.writeFileSync('./data/users.json', JSON.stringify(users, null, 2));
  res.send('User registered');
});

// Task 7: Login user
router.post('/login', (req, res) => {
  const { username, password } = req.body;
  const user = users.find(u => u.username === username && u.password === password);
  user ? res.send('Login successful') : res.status(401).send('Invalid credentials');
});

// Task 8: Add/Modify review
router.post('/review', (req, res) => {
  const { isbn, username, review } = req.body;
  const book = books.find(b => b.isbn === isbn);
  if (!book) return res.status(404).send('Book not found');
  const existing = book.reviews.find(r => r.username === username);
  if (existing) {
    existing.review = review;
  } else {
    book.reviews.push({ username, review });
  }
  fs.writeFileSync('./data/books.json', JSON.stringify(books, null, 2));
  res.send('Review added/updated');
});

// Task 9: Delete review
router.delete('/review', (req, res) => {
  const { isbn, username } = req.body;
  const book = books.find(b => b.isbn === isbn);
  if (!book) return res.status(404).send('Book not found');
  book.reviews = book.reviews.filter(r => r.username !== username);
  fs.writeFileSync('./data/books.json', JSON.stringify(books, null, 2));
  res.send('Review deleted');
});

module.exports = router;
